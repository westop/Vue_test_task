{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-54c1ae8e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Список пользователей\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_post_item = _resolveComponent(\"post-item\");\n  return $props.posts.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_TransitionGroup, {\n    name: \"user-list\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.posts, post => {\n      return _openBlock(), _createBlock(_component_post_item, {\n        post: post,\n        key: post.id,\n        onRemove: $event => _ctx.$emit('remove', post)\n      }, null, 8 /* PROPS */, [\"post\", \"onRemove\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })])) : (_openBlock(), _createElementBlock(\"h2\", _hoisted_3, \" Список пользователей пуст \"));\n}","map":{"version":3,"mappings":";;;;;gEAEIA,oBAA6B,YAAzB,sBAAoB;;;EAUfC,KAAkB,EAAlB;IAAA;EAAA;;;;SAXAC,YAAK,CAACC,MAAM,sBAAvBC,oBAUM,oBATJC,UAA6B,EAC7BC,aAOmBC;IAPDC,IAAI,EAAC;EAAW;sBAE9B,MAAqB,oBADvBJ,oBAKEK,6BAJeP,YAAK,EAAbQ,IAAI;2BADbC,aAKEC;QAHCF,IAAI,EAAEA,IAAI;QACVG,GAAG,EAAEH,IAAI,CAACI,EAAE;QACZC,QAAM,YAAEC,UAAK,WAAWN,IAAI;;;;;yBAInCN,oBAEK,MAFLa,UAEK,EAFyB,6BAE9B","names":["_createElementVNode","style","$props","length","_createElementBlock","_hoisted_2","_createVNode","_TransitionGroup","name","_Fragment","post","_createBlock","_component_post_item","key","id","onRemove","_ctx","_hoisted_3"],"sourceRoot":"","sources":["/home/wstp/vs_code/tests/Vue_test_task/src/components/PostList.vue"],"sourcesContent":["<template>\n  <div v-if=\"posts.length > 0\">\n    <h3>Список пользователей</h3>\n    <transition-group name=\"user-list\">\n      <post-item\n        v-for=\"post in posts\"\n        :post=\"post\"\n        :key=\"post.id\"\n        @remove=\"$emit('remove', post)\"\n      />\n    </transition-group>\n  </div>\n  <h2 v-else style=\"color: red\">\n    Список пользователей пуст\n  </h2>\n</template>\n\n<script>\nimport PostItem from \"@/components/PostItem\";\nexport default {\n  components: {PostItem},\n  props: {\n    posts: {\n      type: Array,\n      required: true\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-list-item {\n  display: inline-block;\n  margin-right: 10px;\n}\n.user-list-enter-active,\n.user-list-leave-active {\n  transition: all 0.4s ease;\n}\n.user-list-enter-from,\n.user-list-leave-to {\n  opacity: 0;\n  transform: translateX(130px);\n}\n.user-list-move {\n  transition: transform 0.4s ease;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}