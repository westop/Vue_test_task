{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, resolveDirective as _resolveDirective, createVNode as _createVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Страница с постами\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"app__btns\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"page__wrapper\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"observer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_my_select = _resolveComponent(\"my-select\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  const _directive_focus = _resolveDirective(\"focus\");\n  const _directive_intersection = _resolveDirective(\"intersection\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createVNode(_component_my_input, {\n    modelValue: $data.searchQuery,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"Поиск....\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), [[_directive_focus]]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_my_button, {\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Создать пользователя \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_select, {\n    modelValue: $data.selectedSort,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedSort = $event),\n    options: $data.sortOptions\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible,\n    \"onUpdate:show\": _cache[2] || (_cache[2] = $event => $data.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onCreate: $options.createPost\n    }, null, 8 /* PROPS */, [\"onCreate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), !$data.isPostsLoading ? (_openBlock(), _createBlock(_component_post_list, {\n    key: 0,\n    posts: $options.sortedAndSearchedPosts,\n    onRemove: $options.removePost\n  }, null, 8 /* PROPS */, [\"posts\", \"onRemove\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Идет загрузка...\")), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.totalPages, pageNumber => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: pageNumber,\n      class: _normalizeClass([\"page\", {\n        'current-page': $data.page === pageNumber\n      }]),\n      onClick: $event => $options.changePage(pageNumber)\n    }, _toDisplayString(pageNumber), 11 /* TEXT, CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"div\", _hoisted_6, null, 512 /* NEED_PATCH */), [[_directive_intersection, $options.loadMorePosts]])]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAA2B,YAAvB,oBAAkB;;EAEjBC,KAAK,EAAC;AAAW;;;;;EAYjBA,KAAK,EAAC;AAAe;;;EAMUA,KAAK,EAAC;AAAU;;;;;;;;;;uBArBtDC,oBAsBM,cArBJC,UAA2B,kBAC3BC,aAAkEC;gBAA/CC,iBAAW;+DAAXA,iBAAW;IAAEC,WAAW,EAAC;kEAC5CP,oBAKM,OALNQ,UAKM,GAJJJ,aAEYK;IAFAC,OAAK,EAAEC;EAAU;sBAAE,MAE/B,kBAF+B,wBAE/B;;kCACAP,aAA2DQ;gBAAvCN,kBAAY;+DAAZA,kBAAY;IAAGO,OAAO,EAAEP;wDAE9CF,aAEYU;IAFOC,IAAI,EAAET,mBAAa;yDAAbA,mBAAa;;sBACpC,MAAkC,CAAlCF,aAAkCY;MAAtBC,QAAM,EAAEN;IAAU;;gCAEuCL,oBAAc,kBAArFY,aAAyFC;;IAA7EC,KAAK,EAAET,+BAAsB;IAAGU,QAAM,EAAEV;mEACpDT,oBAAkC,mBAAtB,kBAAgB,IAE5BF,oBAKM,OALNsB,UAKM,sBAJJpB,oBAGMqB,6BAHoBjB,gBAAU,EAAxBkB,UAAU;yBAAtBtB,oBAGM;MAHiCuB,GAAG,EAAED,UAAU;MAAEvB,KAAK,mBAAC,MAAM;wBAAmCK,UAAI,KAAKkB;;MAE5Gd,OAAK,YAAEC,mBAAU,CAACa,UAAU;wBAAMA,UAAU;oDAGlDxB,oBAA2D,OAA3D0B,UAA2D,0DAAtCf,sBAAa","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_my_input","$data","placeholder","_hoisted_2","_component_my_button","onClick","$options","_component_my_select","options","_component_my_dialog","show","_component_post_form","onCreate","_createBlock","_component_post_list","posts","onRemove","_hoisted_4","_Fragment","pageNumber","key","_hoisted_6"],"sourceRoot":"","sources":["/home/wstp/vs_code/tests/Vue_test_task/src/pages/UserPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Страница с постами</h1>\n    <my-input v-model=\"searchQuery\" placeholder=\"Поиск....\" v-focus />\n    <div class=\"app__btns\">\n      <my-button @click=\"showDialog\">\n        Создать пользователя\n      </my-button>\n      <my-select v-model=\"selectedSort\" :options=\"sortOptions\" />\n    </div>\n    <my-dialog v-model:show=\"dialogVisible\">\n      <post-form @create=\"createPost\" />\n    </my-dialog>\n    <post-list :posts=\"sortedAndSearchedPosts\" @remove=\"removePost\" v-if=\"!isPostsLoading\" />\n    <div v-else>Идет загрузка...</div>\n\n    <div class=\"page__wrapper\">\n      <div v-for=\"pageNumber in totalPages\" :key=\"pageNumber\" class=\"page\" :class=\"{\n        'current-page': page === pageNumber\n      }\" @click=\"changePage(pageNumber)\">{{ pageNumber }}\n      </div>\n    </div>\n    <div v-intersection=\"loadMorePosts\" class=\"observer\"></div>\n  </div>\n</template>\n\n<script>\nimport PostForm from \"@/components/PostForm\";\nimport PostList from \"@/components/PostList\";\nimport MyButton from \"@/components/UI/MyButton\";\nimport axios from 'axios';\nimport MySelect from \"@/components/UI/MySelect\";\nimport MyInput from \"@/components/UI/MyInput\";\n\nexport default {\n  components: {\n    MyInput,\n    MySelect,\n    MyButton,\n    PostList, PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      coments: [],\n      dialogVisible: false,\n      isPostsLoading: false,\n      selectedSort: '',\n      searchQuery: '',\n      page: 1,\n      limit: 10,\n      totalPages: 0,\n      sortOptions: [\n        { value: 'title', name: 'По названию' },\n        { value: 'body', name: 'По содержимому' },\n      ]\n    }\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id)\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    changePage(pageNumber) {\n      this.page = pageNumber\n    },\n    async fetchPosts() {\n      try { \n        \n        this.isPostsLoading = true;\n        const responseComents = await axios.get('https://jsonplaceholder.typicode.com/comments');\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\n\n        this.coments = responseComents.data;\n        this.posts = response.data;\n      } catch (e) {\n        alert('Ошибка')\n      } finally {\n        this.isPostsLoading = false;\n\n       \n\n        console.log(this.posts)\n        console.log(this.coments)\n      }\n    },\n\n\n\n    async loadMorePosts() {\n      try {\n        this.page += 1;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\n        this.posts = [...this.posts, ...response.data];\n      } catch (e) {\n        alert('Ошибка')\n      }\n    }\n  },\n  \n  mounted() {\n    this.fetchPosts();\n    // const options = {\n    //   rootMargin: '0px',\n    //   threshold: 1.0\n    // }\n    // const callback = (entries, observer) => {\n    //   if (entries[0].isIntersecting && this.page < this.totalPages) {\n    //     this.loadMorePosts()\n    //   }\n    // };\n    // const observer = new IntersectionObserver(callback, options);\n    // observer.observe(this.$refs.observer);\n  },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]))\n    },\n    sortedAndSearchedPosts() {\n      return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\n    }\n  },\n  watch: {\n    page() {\n      this.fetchPosts()\n    }\n  }\n}\n</script>\n\n<style>\n.app__btns {\n  margin: 15px 0;\n  display: flex;\n  justify-content: space-between;\n}\n\n.page__wrapper {\n  display: flex;\n  margin-top: 15px;\n}\n\n.page {\n  border: 1px solid black;\n  padding: 10px;\n}\n\n.current-page {\n  border: 2px solid teal;\n}\n\n.observer {\n  height: 30px;\n  background: green;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}