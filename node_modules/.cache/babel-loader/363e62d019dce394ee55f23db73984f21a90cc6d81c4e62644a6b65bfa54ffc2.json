{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostForm from \"@/components/PostForm\";\nimport PostList from \"@/components/PostList\";\nimport MyButton from \"@/components/UI/MyButton\";\nimport axios from 'axios';\nimport MySelect from \"@/components/UI/MySelect\";\nimport MyInput from \"@/components/UI/MyInput\";\nexport default {\n  components: {\n    MyInput,\n    MySelect,\n    MyButton,\n    PostList,\n    PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostsLoading: false,\n      selectedSort: '',\n      searchQuery: '',\n      page: 1,\n      limit: 10,\n      totalPages: 0,\n      sortOptions: [{\n        value: 'title',\n        name: 'По названию'\n      }, {\n        value: 'body',\n        name: 'По содержимому'\n      }]\n    };\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    changePage(pageNumber) {\n      this.page = pageNumber;\n    },\n    async fetchPosts() {\n      try {\n        this.isPostsLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = response.data;\n      } catch (e) {\n        alert('Ошибка');\n      } finally {\n        this.isPostsLoading = false;\n      }\n    },\n    async loadMorePosts() {\n      try {\n        this.page += 1;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = [...this.posts, ...response.data];\n      } catch (e) {\n        alert('Ошибка');\n      }\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n    // const options = {\n    //   rootMargin: '0px',\n    //   threshold: 1.0\n    // }\n    // const callback = (entries, observer) => {\n    //   if (entries[0].isIntersecting && this.page < this.totalPages) {\n    //     this.loadMorePosts()\n    //   }\n    // };\n    // const observer = new IntersectionObserver(callback, options);\n    // observer.observe(this.$refs.observer);\n  },\n\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]));\n    },\n    sortedAndSearchedPosts() {\n      return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  watch: {\n    page() {\n      this.fetchPosts();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["PostForm","PostList","MyButton","axios","MySelect","MyInput","components","data","posts","dialogVisible","isPostsLoading","selectedSort","searchQuery","page","limit","totalPages","sortOptions","value","name","methods","createPost","post","push","removePost","filter","p","id","showDialog","changePage","pageNumber","fetchPosts","response","get","params","_page","_limit","Math","ceil","headers","e","alert","loadMorePosts","mounted","computed","sortedPosts","sort","post1","post2","localeCompare","sortedAndSearchedPosts","title","toLowerCase","includes","watch"],"sourceRoot":"","sources":["/home/wstp/vs_code/tests/Vue_test_task/src/pages/UserPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Страница с постами</h1>\n    <my-input v-model=\"searchQuery\" placeholder=\"Поиск....\" v-focus />\n    <div class=\"app__btns\">\n      <my-button @click=\"showDialog\">\n        Создать пользователя\n      </my-button>\n      <my-select v-model=\"selectedSort\" :options=\"sortOptions\" />\n    </div>\n    <my-dialog v-model:show=\"dialogVisible\">\n      <post-form @create=\"createPost\" />\n    </my-dialog>\n    <post-list :posts=\"sortedAndSearchedPosts\" @remove=\"removePost\" v-if=\"!isPostsLoading\" />\n    <div v-else>Идет загрузка...</div>\n\n    <div class=\"page__wrapper\">\n      <div v-for=\"pageNumber in totalPages\" :key=\"pageNumber\" class=\"page\" :class=\"{\n        'current-page': page === pageNumber\n      }\" @click=\"changePage(pageNumber)\">{{ pageNumber }}\n      </div>\n    </div>\n    <div v-intersection=\"loadMorePosts\" class=\"observer\"></div>\n  </div>\n</template>\n\n<script>\nimport PostForm from \"@/components/PostForm\";\nimport PostList from \"@/components/PostList\";\nimport MyButton from \"@/components/UI/MyButton\";\nimport axios from 'axios';\nimport MySelect from \"@/components/UI/MySelect\";\nimport MyInput from \"@/components/UI/MyInput\";\n\nexport default {\n  components: {\n    MyInput,\n    MySelect,\n    MyButton,\n    PostList, PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostsLoading: false,\n      selectedSort: '',\n      searchQuery: '',\n      page: 1,\n      limit: 10,\n      totalPages: 0,\n      sortOptions: [\n        { value: 'title', name: 'По названию' },\n        { value: 'body', name: 'По содержимому' },\n      ]\n    }\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id)\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    changePage(pageNumber) {\n      this.page = pageNumber\n    },\n    async fetchPosts() {\n      try {\n        this.isPostsLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\n        this.posts = response.data;\n      } catch (e) {\n        alert('Ошибка')\n      } finally {\n        this.isPostsLoading = false;\n        \n      }\n    },\n    async loadMorePosts() {\n      try {\n        this.page += 1;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\n        this.posts = [...this.posts, ...response.data];\n      } catch (e) {\n        alert('Ошибка')\n      }\n    }\n  },\n  \n  mounted() {\n    this.fetchPosts();\n    // const options = {\n    //   rootMargin: '0px',\n    //   threshold: 1.0\n    // }\n    // const callback = (entries, observer) => {\n    //   if (entries[0].isIntersecting && this.page < this.totalPages) {\n    //     this.loadMorePosts()\n    //   }\n    // };\n    // const observer = new IntersectionObserver(callback, options);\n    // observer.observe(this.$refs.observer);\n  },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]))\n    },\n    sortedAndSearchedPosts() {\n      return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\n    }\n  },\n  watch: {\n    page() {\n      this.fetchPosts()\n    }\n  }\n}\n</script>\n\n<style>\n.app__btns {\n  margin: 15px 0;\n  display: flex;\n  justify-content: space-between;\n}\n\n.page__wrapper {\n  display: flex;\n  margin-top: 15px;\n}\n\n.page {\n  border: 1px solid black;\n  padding: 10px;\n}\n\n.current-page {\n  border: 2px solid teal;\n}\n\n.observer {\n  height: 30px;\n  background: green;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}